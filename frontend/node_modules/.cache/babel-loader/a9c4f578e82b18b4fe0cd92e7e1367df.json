{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Michael\\\\React\\\\frontend\\\\src\\\\LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) return;\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) return;\n    if (!this.state.password) return;\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Conent-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Log in\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : '',\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password ? this.state.password : '',\n        onChange: val => this.setInputValue('password', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"Login\",\n        disabled: this.state.buttonDisabled,\n        onClick: () => this.doLogin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Michael/React/frontend/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          username: '',\r\n          password: '',\r\n          buttonDisabled: false\r\n      }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n      val = val.trim();\r\n\r\n      if (val.length > 12)\r\n      return;\r\n\r\n      this.setState({\r\n          [property]: val\r\n      })\r\n  }\r\n\r\n  resetForm(){\r\n      this.setState({\r\n          username: '',\r\n          password: '',\r\n          buttonDisabled: false\r\n      })\r\n  }\r\n\r\n  async doLogin() {\r\n\r\n    if (!this.state.username)\r\n    return;\r\n\r\n    if (!this.state.password)\r\n    return;\r\n\r\n    this.setState({\r\n        buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n\r\n        let res = await fetch('/login',{\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Conent-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        });\r\n\r\n        let result = await res.json();\r\n        if (result && result.success){\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n        }\r\n\r\n        else if (result && result.success === false){\r\n            this.resetForm();\r\n            alert(result.msg);\r\n        }\r\n    }\r\n\r\n    catch(e) {\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n  }\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in\r\n        <InputField\r\n            type = 'text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={(val) => this.setInputValue('username', val)}\r\n        />\r\n\r\n        <InputField\r\n            type = 'password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={(val) => this.setInputValue('password', val)}\r\n        />\r\n\r\n        <SubmitButton\r\n            text = 'Login'\r\n            disabled = {this.state.buttonDisabled}\r\n            onClick = { () => this.doLogin()}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}