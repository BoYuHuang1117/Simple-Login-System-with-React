{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","header","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd582ba0.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\r\n\r\n/**\r\n * UserStore\r\n */\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this,{\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n            className='input'\r\n            type={this.props.type}\r\n            placeholder={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={ (e) => this.props.onChange(e.target.value) }\r\n        >\r\n        \r\n        </input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        \r\n        <button\r\n            className='btn'\r\n            disabled={this.props.disabled}\r\n            onClick={ () => this.props.onClick()}\r\n        >\r\n            {this.props.text}\r\n\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          username: '',\r\n          password: '',\r\n          buttonDisabled: false\r\n      }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n      val = val.trim();\r\n\r\n      if (val.length > 12)\r\n      return;\r\n\r\n      this.setState({\r\n          [property]: val\r\n      })\r\n  }\r\n\r\n  resetForm(){\r\n      this.setState({\r\n          username: '',\r\n          password: '',\r\n          buttonDisabled: false\r\n      })\r\n  }\r\n\r\n  async doLogin() {\r\n\r\n    if (!this.state.username)\r\n    return;\r\n\r\n    if (!this.state.password)\r\n    return;\r\n\r\n    this.setState({\r\n        buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n\r\n        let res = await fetch('/login',{\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Conent-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        });\r\n\r\n        let result = await res.json();\r\n        if (result && result.success){\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n        }\r\n\r\n        else if (result && result.success === false){\r\n            this.resetForm();\r\n            alert(result.msg);\r\n        }\r\n    }\r\n\r\n    catch(e) {\r\n        console.log(e);\r\n        this.resetForm();\r\n    }\r\n  }\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in\r\n        <InputField\r\n            type = 'text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={(val) => this.setInputValue('username', val)}\r\n        />\r\n\r\n        <InputField\r\n            type = 'password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={(val) => this.setInputValue('password', val)}\r\n        />\r\n\r\n        <SubmitButton\r\n            text = 'Login'\r\n            disabled = {this.state.buttonDisabled}\r\n            onClick = { () => this.doLogin()}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try{\n\n      let res = await fetch('/isLogginIn',{\n        method: 'post',\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;        \n      }\n    }\n\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n  async doLogout() {\n    try{\n\n      let res = await fetch('/logout',{\n        method: 'post',\n        header: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n\n    }\n\n    catch(e){\n      console.log(e);\n    }\n    \n  }\n\n  render (){\n    \n    if (UserStore.loading){\n      return (\n        <div className=\"app\">\n          <div className = 'container'>\n            Loading, please wait..\n          </div>\n        </div>\n      );\n    }\n\n    else {\n\n      if (UserStore.isLoggedIn){\n        return (\n          <div className=\"app\">\n            <div className = 'container'>\n              Welcome{UserStore.username}\n\n              <SubmitButton\n                text = {'Log out'}\n                disabled = {false}\n                onClick = { () => this.doLogout() }\n              />\n\n            </div>\n          </div>\n        );\n      }\n\n\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            <LoginForm/>\n          </div>\n        </div>\n      );\n    }\n\n  }\n\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}